package

import com.bootdo.common.utils.PageUtils;
import com.bootdo.common.utils.Query;
import com.bootdo.common.utils.R;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

${package}.controller;
${package}.domain.${className}DO;
${package}.service.${className}Service;

/**
 * <p>Title: ${className}Controller</p>
 * <p>Description: ${classname} Controller</p>
 *
 * @author ${author}
 * @version ${version}
 * @date ${datetime}
 */
@Controller
@RequestMapping("/${pathName}/${classname}")
public class ${className}Controller {

	@Autowired
	private ${className}Service ${classname}Service;

    /**
     * ${classname} ${classname}
     *
	 * @return String
	 */
	@GetMapping()
	@RequiresPermissions("${pathName}:${classname}:${classname}")
    public String ${classname}() {
	    return "${pathName}/${classname}/${classname}";
	}

    /**
     * list 列表
     *
	 * @return PageUtils
	 */
	@ResponseBody
	@GetMapping("/list")
	@RequiresPermissions("${pathName}:${classname}:${classname}")
	public PageUtils list(@RequestParam Map<String, Object> params) {
		// 查询列表数据
        Query query = new Query(params);
		List<${className}DO> ${classname}List = ${classname}Service.list(query);
		int total = ${classname}Service.count(query);
		PageUtils pageUtils = new PageUtils(${classname}List, total);
		return pageUtils;
	}

    /**
     * add 添加
     *
	 * @return String
	 */
	@GetMapping("/add")
	@RequiresPermissions("${pathName}:${classname}:add")
    public String add() {
	    return "${pathName}/${classname}/add";
	}

    /**
     * edit 编辑
     *
	 * @return String
	 */
	@GetMapping("/edit/{${pk.attrname}}")
	@RequiresPermissions("${pathName}:${classname}:edit")
    public String edit(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}, Model model) {
		${className}DO ${classname} = ${classname}Service.get(${pk.attrname});
		model.addAttribute("${classname}", ${classname});
	    return "${pathName}/${classname}/edit";
	}

    /**
     * save 保存
     *
	 * @return R
	 */
	@ResponseBody
	@PostMapping("/save")
	@RequiresPermissions("${pathName}:${classname}:add")
	public R save(${className}DO ${classname}) {
		if (${classname}Service.save(${classname}) > 0) {
			return R.ok();
		}
		return R.error();
	}

    /**
     * update 修改
     *
	 * @return R
	 */
	@ResponseBody
	@PostMapping("/update")
	@RequiresPermissions("${pathName}:${classname}:edit")
	public R update(${className}DO ${classname}) {
		${classname}Service.update(${classname});
		return R.ok();
	}

    /**
     * remove 删除
     *
	 * @return R
	 */
	@ResponseBody
    @PostMapping("/remove")
	@RequiresPermissions("${pathName}:${classname}:remove")
	public R remove(${pk.attrType} ${pk.attrname}) {
		if (${classname}Service.remove(${pk.attrname}) > 0) {
		    return R.ok();
		}
		return R.error();
	}

    /**
     * batchRemove 批量删除
     *
	 * @return R
	 */
    @ResponseBody
    @PostMapping("/batchRemove")
	@RequiresPermissions("${pathName}:${classname}:batchRemove")
	public R batchRemove(@RequestParam("ids[]") ${pk.attrType}[] ${pk.attrname}s) {
		${classname}Service.batchRemove(${pk.attrname}s);
		return R.ok();
	}
	
}
